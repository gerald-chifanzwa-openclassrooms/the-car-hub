@model CarHub.Models.VehicleDetailsViewModel
@inject CarHub.Services.IVehicleRepairsService repairsService
@{
    ViewData["Title"] = "Details";
    var repairs = await repairsService.GetVehicleRepairs(Model.Id, default);
}

<div class="flex flex-col items-stretch">
    <div class="px-2 md:px-4 py-4 text-center bg-gray-200">
        <h1 class="text-7xl font-bold font-sans text-indigo-700">
            Vehicle Details
        </h1>

        <p class="text-2xl text-gray-600 font-sans">
            @Html.DisplayFor(model => model.Year)
            @Html.DisplayFor(model => model.Make)
            @Html.DisplayFor(model => model.Model)
            @Html.DisplayFor(model => model.Trim)
        </p>
    </div>

    <div class="w-full px-16 py-8 flex flex-row items-center gap-x-2">
        <a class="btn bg-gray-300 text-gray-800 hover:bg-gray-500 transition duration-100 ease-in font-bold font-sans" asp-action="Index">Back to List</a>
        @if (Model.Status == CarHub.Data.LotDisplayStatus.Hidden)
        {
            <a class="btn bg-gray-300 text-gray-800 hover:bg-gray-500 transition duration-100 ease-in font-bold font-sans" asp-action="EditCar" asp-route-id="@Model.Id">Edit</a>
            <a class="btn bg-gray-300 text-gray-800 hover:bg-gray-500 transition duration-100 ease-in font-bold font-sans" asp-action="Publish" asp-route-id="@Model.Id">Publish For Sale</a>
            <a class="btn bg-gray-300 text-gray-800 hover:bg-gray-500 transition duration-100 ease-in font-bold font-sans" asp-action="UploadImage" asp-route-id="@Model.Id">Add Photos</a>
            <a class="btn bg-gray-300 text-gray-800 hover:bg-gray-500 transition duration-100 ease-in font-bold font-sans" asp-action="AddRepair" asp-route-id="@Model.Id">Add Repair</a>
        }
        @if (Model.Status == CarHub.Data.LotDisplayStatus.Show)
        {
            <a class="btn bg-gray-300 text-gray-800 hover:bg-gray-500 transition duration-100 ease-in font-bold font-sans" asp-action="FlagSold" asp-route-id="@Model.Id">Mark as Sold</a>
            <a class="btn bg-gray-300 text-gray-800 hover:bg-gray-500 transition duration-100 ease-in font-bold font-sans" asp-action="UploadImage" asp-route-id="@Model.Id">Add Photos</a>
        }
    </div>
    <div class="grid grid-cols-3 gap-y-2 gap-x-4 px-16">
        @foreach (var image in Model.Images)
        {
            <div class="h-64 rounded shadow overflow-hidden">
                <img src="@image" alt="Vehicle Image" class="img-thumbnail h-full w-full object-cover" />
            </div>
        }
    </div>
    <div class="mx-auto w-full px-8 py-4 flex flex-col items-stretch gap-y-2">
        <dl class="grid grid-cols-2 gap-x-4 gap-y-2">
            <dt class="text-right text-gray-500">
                @Html.DisplayNameFor(model => model.Make)
            </dt>
            <dd class="text-left text-gray-900 font-bold">
                @Html.DisplayFor(model => model.Make)
            </dd>
            <dt class="text-right text-gray-500">
                @Html.DisplayNameFor(model => model.Model)
            </dt>
            <dd class="text-left text-gray-900 font-bold">
                @Html.DisplayFor(model => model.Model)
            </dd>
            <dt class="text-right text-gray-500">
                @Html.DisplayNameFor(model => model.Trim)
            </dt>
            <dd class="text-left text-gray-900 font-bold">
                @Html.DisplayFor(model => model.Trim)
            </dd>
            <dt class="text-right text-gray-500">
                @Html.DisplayNameFor(model => model.Year)
            </dt>
            <dd class="text-left text-gray-900 font-bold">
                @Html.DisplayFor(model => model.Year)
            </dd>
            <dt class="text-right text-gray-500">
                @Html.DisplayNameFor(model => model.PurchaseDate)
            </dt>
            <dd class="text-left text-gray-900 font-bold">
                @Html.DisplayFor(model => model.PurchaseDate)
            </dd>
            <dt class="text-right text-gray-500">
                @Html.DisplayNameFor(model => model.PurchasePrice)
            </dt>
            <dd class="text-left text-gray-900 font-bold">
                @Html.DisplayFor(model => model.PurchasePrice)
            </dd>
            <dt class="text-right text-gray-500">
                @Html.DisplayNameFor(model => model.SellingPrice)
            </dt>
            <dd class="text-left text-gray-900 font-bold">
                @Html.DisplayFor(model => model.SellingPrice)
            </dd>
        </dl>
    </div>
    <div class="px-16 border-t border-gray-400">
        <h4 class="text-2xl text-indigo-700 font-bold my-6">Repairs</h4>
        @if (repairs.Count > 0)
        {
            <div class="flex flex-col gap-y-2 mb-4">
                @foreach (var repair in repairs)
                {
                    <div class="flex justify-between items-center bg-white rounded px-4 py-2 shadow text-lg">
                        <div class="flex gap-x-4 items-center">
                            <div class="w-[20ch]">
                                <span class="text-gray-600 italic font-sans text-sm">@Html.DisplayFor(_ => repair.RepairDate)</span>
                            </div>
                            <div class="font-bold text-gray-900">@Html.DisplayFor(_ => repair.Description)</div>
                        </div>
                        <span class="bg-yellow-100 text-yellow-800 rounded inline-block px-4 py-2 font-mono">@Html.DisplayFor(_ => repair.Cost)</span>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="p-5 mb-4 bg-light rounded-3">
                <div class="container-fluid">
                    <h3 class="display-5 fw-bold">No repairs have been recorded for this vehicle</h3>
                </div>
            </div>
        }
    </div>
</div>
